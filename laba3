import random
import copy

def reader(filename):
    with open('3.txt', 'r') as file:
        return [list(map(int, line.split())) for line in file]

k, n = int(input("Введите число k: ")), int(input("Введите число n: "))
KON, UMN, Fk, A, A_B, G, x, count_polozh, count_otric = [], [], [], [], [], 0, n, 0, 0

# Инициализация матриц
for i in range(n):
    A.append([0] * n)
    A_B.append([0] * n)
    Fk.append([0] * n)
    UMN.append([0] * n)
    KON.append([0] * n)

# Чтение матрицы A из файла
A = reader('matrix.txt')
print("Матрица A: ")
for i in range(n):
    print(f"{A[i]}")

# Копируем матрицу A в F
F = copy.deepcopy(A)

# Транспонирование матрицы A
AT = [[0 for j in range(len(A))] for i in range(len(A[0]))]
for i in range(len(AT)):
    for j in range(len(AT)):
        AT[j][i] = A[i][j]

print("Транспонированная матрица A: ")
for i in range(n):
    print(f"{AT[i]}")

# Подсчет положительных и отрицательных элементов в определенных областях
e = n - 1
for i in range(n):
    for j in range(n):
        if i > j and j > e and (j + 1) % 2 == 0 and F[i][j] > 0:
            count_polozh += 1
    e -= 1

e = n - 1
for i in range(n):
    for j in range(n):
        if i < j and j < e and (j + 1) % 2 != 0 and F[i][j] < 0:
            count_otric += 1
    e -= 1

# Изменение матрицы F в зависимости от условия
min_odd_col1 = float('inf')
sum_odd_row3 = 0

# Минимальный элемент в нечетных столбцах области 1
for i in range(3):  # строки 0-2
    for j in [1, 3]:  # нечетные столбцы
        if F[i][j] < min_odd_col1:
            min_odd_col1 = F[i][j]

# Сумма чисел в нечетных строках области 3
for i in range(3, 7):  # строки 3-6
    for j in [0, 2]:  # нечетные столбцы
        sum_odd_row3 += F[i][j]

# Проверяем условие
if min_odd_col1 < sum_odd_row3:
    # Меняем местами области 2 и 3 симметрично
    for i in range(3):  # строки 0-2
        for j in range(3):  # столбцы 4-6
            F[i][j + 4], F[i + 3][j] = F[i + 3][j], F[i][j + 4]
else:
    # Меняем местами области 2 и 3 несимметрично
    for i in range(3):  # строки 0-2
        for j in range(3):  # столбцы 4-6
            F[i][j + 4] = F[i + 3][j]

print("Матрица F: ")
for i in range(n):
    print(f"{F[i]}")

# Вычисление матрицы A_B, Fk, UMN и KON
for i in range(len(AT)):
    for j in range(len(AT)):
        A_B[i][j] = (A[i][j] + F[i][j])
        Fk[i][j] = F[i][j] * k
        for m in range(len(AT)):
            UMN[i][j] += A_B[i][m] * AT[m][j]
        KON[i][j] = UMN[i][j] - Fk[i][j]

print("Матрица, равная сумме матриц F и A:")
for i in range(n):
    print(f"{A_B[i]}")

print("Матрица (F + A) * AT:")
for i in range(n):
    print(f"{UMN[i]}")

print(f"Матрица, равная произведению матрицы F и числа {k}:")
for i in range(n):
    print(f"{Fk[i]}")

print("Результат:")
for i in range(n):
    print(f"{KON[i]}")

